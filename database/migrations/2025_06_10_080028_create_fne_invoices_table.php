<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     */
    public function up()
    {
        Schema::create('fne_invoices', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('AutoIndex');
            $table->integer('DocType')->nullable();
            $table->integer('DocVersion')->nullable();
            $table->integer('DocState')->nullable();
            $table->integer('DocFlag')->nullable();
            $table->integer('OrigDocID')->nullable();
            $table->string('InvNumber', 50)->nullable();
            $table->string('GrvNumber', 50)->nullable();
            $table->integer('GrvID')->nullable();
            $table->integer('AccountID')->nullable();
            $table->string('Description', 255)->nullable();
            $table->dateTime('InvDate')->nullable();
            $table->dateTime('OrderDate')->nullable();
            $table->dateTime('DueDate')->nullable();
            $table->dateTime('DeliveryDate')->nullable();
            $table->boolean('TaxInclusive')->default(false);
            $table->boolean('Email_Sent')->default(false);
            $table->string('Address1', 255)->nullable();
            $table->string('Address2', 255)->nullable();
            $table->string('Address3', 255)->nullable();
            $table->string('Address4', 255)->nullable();
            $table->string('Address5', 255)->nullable();
            $table->string('Address6', 255)->nullable();
            $table->string('PAddress1', 255)->nullable();
            $table->string('PAddress2', 255)->nullable();
            $table->string('PAddress3', 255)->nullable();
            $table->string('PAddress4', 255)->nullable();
            $table->string('PAddress5', 255)->nullable();
            $table->string('PAddress6', 255)->nullable();
            $table->integer('DelMethodID')->nullable();
            $table->integer('DocRepID')->nullable();
            $table->string('OrderNum', 50)->nullable();
            $table->string('DeliveryNote', 50)->nullable();
            $table->float('InvDisc')->nullable();
            $table->integer('InvDiscReasonID')->nullable();
            $table->string('Message1', 255)->nullable();
            $table->string('Message2', 255)->nullable();
            $table->string('Message3', 255)->nullable();
            $table->integer('ProjectID')->nullable();
            $table->integer('TillID')->nullable();
            $table->float('POSAmntTendered')->nullable();
            $table->float('POSChange')->nullable();
            $table->boolean('GrvSplitFixedCost')->default(false);
            $table->float('GrvSplitFixedAmnt')->nullable();
            $table->integer('OrderStatusID')->nullable();
            $table->integer('OrderPriorityID')->nullable();
            $table->string('ExtOrderNum', 50)->nullable();
            $table->integer('ForeignCurrencyID')->nullable();
            $table->float('InvDiscAmnt')->nullable();
            $table->float('InvDiscAmntEx')->nullable();
            $table->float('InvTotExclDEx')->nullable();
            $table->float('InvTotTaxDEx')->nullable();
            $table->float('InvTotInclDEx')->nullable();
            $table->float('InvTotExcl')->nullable();
            $table->float('InvTotTax')->nullable();
            $table->float('InvTotIncl')->nullable();
            $table->float('OrdDiscAmnt')->nullable();
            $table->float('OrdDiscAmntEx')->nullable();
            $table->float('OrdTotExclDEx')->nullable();
            $table->float('OrdTotTaxDEx')->nullable();
            $table->float('OrdTotInclDEx')->nullable();
            $table->float('OrdTotExcl')->nullable();
            $table->float('OrdTotTax')->nullable();
            $table->float('OrdTotIncl')->nullable();
            $table->boolean('bUseFixedPrices')->default(false);
            $table->integer('iDocPrinted')->nullable();
            $table->integer('iINVNUMAgentID')->nullable();
            $table->float('fExchangeRate')->nullable();
            $table->float('fGrvSplitFixedAmntForeign')->nullable();
            $table->float('fInvDiscAmntForeign')->nullable();
            $table->float('fInvDiscAmntExForeign')->nullable();
            $table->float('fInvTotExclDExForeign')->nullable();
            $table->float('fInvTotTaxDExForeign')->nullable();
            $table->float('fInvTotInclDExForeign')->nullable();
            $table->float('fInvTotExclForeign')->nullable();
            $table->float('fInvTotTaxForeign')->nullable();
            $table->float('fInvTotInclForeign')->nullable();
            $table->float('fOrdDiscAmntForeign')->nullable();
            $table->float('fOrdDiscAmntExForeign')->nullable();
            $table->float('fOrdTotExclDExForeign')->nullable();
            $table->float('fOrdTotTaxDExForeign')->nullable();
            $table->float('fOrdTotInclDExForeign')->nullable();
            $table->float('fOrdTotExclForeign')->nullable();
            $table->float('fOrdTotTaxForeign')->nullable();
            $table->float('fOrdTotInclForeign')->nullable();
            $table->string('cTaxNumber', 50)->nullable();
            $table->string('cAccountName', 255)->nullable();
            $table->integer('iProspectID')->nullable();
            $table->integer('iOpportunityID')->nullable();
            $table->float('InvTotRounding')->nullable();
            $table->float('OrdTotRounding')->nullable();
            $table->float('fInvTotForeignRounding')->nullable();
            $table->float('fOrdTotForeignRounding')->nullable();
            $table->boolean('bInvRounding')->default(false);
            $table->integer('iInvSettlementTermsID')->nullable();
            $table->string('cSettlementTermInvMsg', 255)->nullable();
            $table->integer('iOrderCancelReasonID')->nullable();
            $table->integer('iLinkedDocID')->nullable();
            $table->boolean('bLinkedTemplate')->default(false);
            $table->float('InvTotInclExRounding')->nullable();
            $table->float('OrdTotInclExRounding')->nullable();
            $table->float('fInvTotInclForeignExRounding')->nullable();
            $table->float('fOrdTotInclForeignExRounding')->nullable();
            $table->integer('iEUNoTCID')->nullable();
            $table->integer('iPOAuthStatus')->nullable();
            $table->integer('iPOIncidentID')->nullable();
            $table->integer('iSupervisorID')->nullable();
            $table->integer('iMergedDocID')->nullable();
            $table->integer('iDocEmailed')->nullable();
            $table->float('fDepositAmountForeign')->nullable();
            $table->float('fRefundAmount')->nullable();
            $table->boolean('bTaxPerLine')->default(false);
            $table->float('fDepositAmountTotal')->nullable();
            $table->float('fDepositAmountUnallocated')->nullable();
            $table->float('fDepositAmountNew')->nullable();
            $table->float('fDepositAmountTotalForeign')->nullable();
            $table->float('fDepositAmountUnallocatedForeign')->nullable();
            $table->float('fRefundAmountForeign')->nullable();
            $table->dateTime('KeepAsideCollectionDate')->nullable();
            $table->dateTime('KeepAsideExpiryDate')->nullable();
            $table->string('cContact', 100)->nullable();
            $table->string('cTelephone', 50)->nullable();
            $table->string('cFax', 50)->nullable();
            $table->string('cEmail', 100)->nullable();
            $table->string('cCellular', 50)->nullable();
            $table->binary('imgOrderSignature')->nullable();
            $table->integer('iInsuranceState')->nullable();
            $table->string('cAuthorisedBy', 100)->nullable();
            $table->string('cClaimNumber', 50)->nullable();
            $table->string('cPolicyNumber', 50)->nullable();
            $table->dateTime('dIncidentDate')->nullable();
            $table->string('cExcessAccName', 100)->nullable();
            $table->string('cExcessAccCont1', 100)->nullable();
            $table->string('cExcessAccCont2', 100)->nullable();
            $table->float('fExcessAmt')->nullable();
            $table->float('fExcessPct')->nullable();
            $table->float('fExcessExclusive')->nullable();
            $table->float('fExcessInclusive')->nullable();
            $table->float('fExcessTax')->nullable();
            $table->float('fAddChargeExclusive')->nullable();
            $table->float('fAddChargeTax')->nullable();
            $table->float('fAddChargeInclusive')->nullable();
            $table->float('fAddChargeExclusiveForeign')->nullable();
            $table->float('fAddChargeTaxForeign')->nullable();
            $table->float('fAddChargeInclusiveForeign')->nullable();
            $table->float('fOrdAddChargeExclusive')->nullable();
            $table->float('fOrdAddChargeTax')->nullable();
            $table->float('fOrdAddChargeInclusive')->nullable();
            $table->float('fOrdAddChargeExclusiveForeign')->nullable();
            $table->float('fOrdAddChargeTaxForeign')->nullable();
            $table->float('fOrdAddChargeInclusiveForeign')->nullable();
            $table->integer('iInvoiceSplitDocID')->nullable();
            $table->string('cGIVNumber', 50)->nullable();
            $table->boolean('bIsDCOrder')->default(false);
            $table->integer('iDCBranchID')->nullable();
            $table->integer('iSalesBranchID')->nullable();
            $table->integer('InvNum_iBranchID')->nullable();
            $table->dateTime('InvNum_dCreatedDate')->nullable();
            $table->dateTime('InvNum_dModifiedDate')->nullable();
            $table->integer('InvNum_iCreatedBranchID')->nullable();
            $table->integer('InvNum_iModifiedBranchID')->nullable();
            $table->integer('InvNum_iCreatedAgentID')->nullable();
            $table->integer('InvNum_iModifiedAgentID')->nullable();
            $table->integer('InvNum_iChangeSetID')->nullable();
            $table->integer('InvNum_Checksum')->nullable();
            $table->boolean('bIDFProccessed')->default(false);
            $table->integer('iImportDeclarationID')->nullable();
            $table->boolean('bSBSI')->default(false);
            $table->string('cPermitNumber', 50)->nullable();
            $table->integer('iStateID')->nullable();
            $table->integer('iCancellationReasonID')->nullable();
            $table->string('cDPOrdServiceTaskNo', 50)->nullable();
            $table->string('cDSOrdServiceTaskNo', 50)->nullable();
            $table->string('cDCrnServiceTaskNo', 50)->nullable();
            $table->string('cDSMExtOrderNum', 50)->nullable();
            $table->string('cHash', 255)->nullable();
            $table->string('cRevenueIntegration', 50)->nullable();
            $table->string('cQuoteNum', 50)->nullable();

            $table->timestamp('last_sync_at')->nullable();
            $table->timestamps();

            $table->index('InvNumber');
            $table->index('AccountID');
            $table->index('InvDate');
            $table->index('cTaxNumber');
        });
    }
    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('fne_invoices');
    }
};
